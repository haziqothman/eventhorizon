{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { credentialLogger, formatError } from \"../../util/logging.js\";\nconst BrowserNotSupportedError = new Error(\"ManagedIdentityCredential is not supported in the browser.\");\nconst logger = credentialLogger(\"ManagedIdentityCredential\");\nexport class ManagedIdentityCredential {\n  constructor() {\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n  async getToken() {\n    logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n}","map":{"version":3,"names":["credentialLogger","formatError","BrowserNotSupportedError","Error","logger","ManagedIdentityCredential","constructor","info","getToken"],"sources":["/Users/user/workspace/eventhorizon/node_modules/@azure/identity/src/credentials/managedIdentityCredential/index-browser.mts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AccessToken, TokenCredential } from \"@azure/core-auth\";\n\nimport { credentialLogger, formatError } from \"../../util/logging.js\";\n\nconst BrowserNotSupportedError = new Error(\n  \"ManagedIdentityCredential is not supported in the browser.\",\n);\nconst logger = credentialLogger(\"ManagedIdentityCredential\");\n\nexport class ManagedIdentityCredential implements TokenCredential {\n  constructor() {\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n\n  public async getToken(): Promise<AccessToken | null> {\n    logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n}\n"],"mappings":"AAAA;AACA;AAIA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,uBAAuB;AAErE,MAAMC,wBAAwB,GAAG,IAAIC,KAAK,CACxC,4DAA4D,CAC7D;AACD,MAAMC,MAAM,GAAGJ,gBAAgB,CAAC,2BAA2B,CAAC;AAE5D,OAAM,MAAOK,yBAAyB;EACpCC,YAAA;IACEF,MAAM,CAACG,IAAI,CAACN,WAAW,CAAC,EAAE,EAAEC,wBAAwB,CAAC,CAAC;IACtD,MAAMA,wBAAwB;EAChC;EAEO,MAAMM,QAAQA,CAAA;IACnBJ,MAAM,CAACI,QAAQ,CAACD,IAAI,CAACN,WAAW,CAAC,EAAE,EAAEC,wBAAwB,CAAC,CAAC;IAC/D,MAAMA,wBAAwB;EAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}