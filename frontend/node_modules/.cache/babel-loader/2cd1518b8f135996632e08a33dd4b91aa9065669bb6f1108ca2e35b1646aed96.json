{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\nconst symbol = Symbol.for('BufferList');\nfunction BufferList(buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf);\n  }\n  BufferList._init.call(this, buf);\n}\nBufferList._init = function _init(buf) {\n  Object.defineProperty(this, symbol, {\n    value: true\n  });\n  this._bufs = [];\n  this.length = 0;\n  if (buf) {\n    this.append(buf);\n  }\n};\nBufferList.prototype._new = function _new(buf) {\n  return new BufferList(buf);\n};\nBufferList.prototype._offset = function _offset(offset) {\n  if (offset === 0) {\n    return [0, 0];\n  }\n  let tot = 0;\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length;\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot];\n    }\n    tot = _t;\n  }\n};\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0];\n  let offset = blOffset[1];\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length;\n  }\n  return offset;\n};\nBufferList.prototype.getBuffers = function getBuffers() {\n  return this._bufs;\n};\nBufferList.prototype.get = function get(index) {\n  if (index > this.length || index < 0) {\n    return undefined;\n  }\n  const offset = this._offset(index);\n  return this._bufs[offset[0]][offset[1]];\n};\nBufferList.prototype.slice = function slice(start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length;\n  }\n  if (typeof end === 'number' && end < 0) {\n    end += this.length;\n  }\n  return this.copy(null, 0, start, end);\n};\nBufferList.prototype.copy = function copy(dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0;\n  }\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length;\n  }\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0);\n  }\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0);\n  }\n  const copy = !!dst;\n  const off = this._offset(srcStart);\n  const len = srcEnd - srcStart;\n  let bytes = len;\n  let bufoff = copy && dstStart || 0;\n  let start = off[1];\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1 ? this._bufs[0] : Buffer.concat(this._bufs, this.length);\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff);\n      bufoff += this._bufs[i].length;\n    }\n    return dst;\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes) : this._bufs[off[0]].slice(start, start + bytes);\n  }\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len);\n  }\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start;\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start);\n      bufoff += l;\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes);\n      bufoff += l;\n      break;\n    }\n    bytes -= l;\n    if (start) {\n      start = 0;\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff);\n  return dst;\n};\nBufferList.prototype.shallowSlice = function shallowSlice(start, end) {\n  start = start || 0;\n  end = typeof end !== 'number' ? this.length : end;\n  if (start < 0) {\n    start += this.length;\n  }\n  if (end < 0) {\n    end += this.length;\n  }\n  if (start === end) {\n    return this._new();\n  }\n  const startOffset = this._offset(start);\n  const endOffset = this._offset(end);\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1);\n  if (endOffset[1] === 0) {\n    buffers.pop();\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1]);\n  }\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1]);\n  }\n  return this._new(buffers);\n};\nBufferList.prototype.toString = function toString(encoding, start, end) {\n  return this.slice(start, end).toString(encoding);\n};\nBufferList.prototype.consume = function consume(bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes);\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this;\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length;\n      this.length -= this._bufs[0].length;\n      this._bufs.shift();\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes);\n      this.length -= bytes;\n      break;\n    }\n  }\n  return this;\n};\nBufferList.prototype.duplicate = function duplicate() {\n  const copy = this._new();\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i]);\n  }\n  return copy;\n};\nBufferList.prototype.append = function append(buf) {\n  return this._attach(buf, BufferList.prototype._appendBuffer);\n};\nBufferList.prototype.prepend = function prepend(buf) {\n  return this._attach(buf, BufferList.prototype._prependBuffer, true);\n};\nBufferList.prototype._attach = function _attach(buf, attacher, prepend) {\n  if (buf == null) {\n    return this;\n  }\n  if (buf.buffer) {\n    // append/prepend a view of the underlying ArrayBuffer\n    attacher.call(this, Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength));\n  } else if (Array.isArray(buf)) {\n    const [starting, modifier] = prepend ? [buf.length - 1, -1] : [0, 1];\n    for (let i = starting; i >= 0 && i < buf.length; i += modifier) {\n      this._attach(buf[i], attacher, prepend);\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    const [starting, modifier] = prepend ? [buf._bufs.length - 1, -1] : [0, 1];\n    for (let i = starting; i >= 0 && i < buf._bufs.length; i += modifier) {\n      this._attach(buf._bufs[i], attacher, prepend);\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString();\n    }\n    attacher.call(this, Buffer.from(buf));\n  }\n  return this;\n};\nBufferList.prototype._appendBuffer = function appendBuffer(buf) {\n  this._bufs.push(buf);\n  this.length += buf.length;\n};\nBufferList.prototype._prependBuffer = function prependBuffer(buf) {\n  this._bufs.unshift(buf);\n  this.length += buf.length;\n};\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset;\n    offset = undefined;\n  }\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.');\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search]);\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding);\n  } else if (this._isBufferList(search)) {\n    search = search.slice();\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength);\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search);\n  }\n  offset = Number(offset || 0);\n  if (isNaN(offset)) {\n    offset = 0;\n  }\n  if (offset < 0) {\n    offset = this.length + offset;\n  }\n  if (offset < 0) {\n    offset = 0;\n  }\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset;\n  }\n  const blOffset = this._offset(offset);\n  let blIndex = blOffset[0]; // index of which internal buffer we're working on\n  let buffOffset = blOffset[1]; // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex];\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset;\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset);\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult]);\n        }\n        buffOffset = buff.length - search.length + 1; // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset]);\n        if (this._match(revOffset, search)) {\n          return revOffset;\n        }\n        buffOffset++;\n      }\n    }\n    buffOffset = 0;\n  }\n  return -1;\n};\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false;\n  }\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false;\n    }\n  }\n  return true;\n};\n(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readBigInt64BE: 8,\n    readBigInt64LE: 8,\n    readBigUInt64BE: 8,\n    readBigUInt64LE: 8,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  };\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength);\n        };\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0);\n        };\n      }\n    })(m);\n  }\n})();\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList(b) {\n  return b instanceof BufferList || BufferList.isBufferList(b);\n};\nBufferList.isBufferList = function isBufferList(b) {\n  return b != null && b[symbol];\n};\nmodule.exports = BufferList;","map":{"version":3,"names":["Buffer","require","symbol","Symbol","for","BufferList","buf","_init","call","Object","defineProperty","value","_bufs","length","append","prototype","_new","_offset","offset","tot","i","_t","_reverseOffset","blOffset","bufferId","getBuffers","get","index","undefined","slice","start","end","copy","dst","dstStart","srcStart","srcEnd","alloc","off","len","bytes","bufoff","concat","allocUnsafe","l","shallowSlice","startOffset","endOffset","buffers","pop","toString","encoding","consume","Math","trunc","Number","isNaN","shift","duplicate","_attach","_appendBuffer","prepend","_prependBuffer","attacher","buffer","from","byteOffset","byteLength","Array","isArray","starting","modifier","_isBufferList","appendBuffer","push","prependBuffer","unshift","indexOf","search","TypeError","isBuffer","blIndex","buffOffset","buff","availableWindow","nativeSearchResult","revOffset","_match","searchOffset","methods","readDoubleBE","readDoubleLE","readFloatBE","readFloatLE","readBigInt64BE","readBigInt64LE","readBigUInt64BE","readBigUInt64LE","readInt32BE","readInt32LE","readUInt32BE","readUInt32LE","readInt16BE","readInt16LE","readUInt16BE","readUInt16LE","readInt8","readUInt8","readIntBE","readIntLE","readUIntBE","readUIntLE","m","b","isBufferList","module","exports"],"sources":["/Users/user/workspace/eventhorizon/node_modules/bl/BufferList.js"],"sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst symbol = Symbol.for('BufferList')\n\nfunction BufferList (buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf)\n  }\n\n  BufferList._init.call(this, buf)\n}\n\nBufferList._init = function _init (buf) {\n  Object.defineProperty(this, symbol, { value: true })\n\n  this._bufs = []\n  this.length = 0\n\n  if (buf) {\n    this.append(buf)\n  }\n}\n\nBufferList.prototype._new = function _new (buf) {\n  return new BufferList(buf)\n}\n\nBufferList.prototype._offset = function _offset (offset) {\n  if (offset === 0) {\n    return [0, 0]\n  }\n\n  let tot = 0\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0]\n  let offset = blOffset[1]\n\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n\n  return offset\n}\n\nBufferList.prototype.getBuffers = function getBuffers () {\n  return this._bufs\n}\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n\n  const offset = this._offset(index)\n\n  return this._bufs[offset[0]][offset[1]]\n}\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length\n  }\n\n  return this.copy(null, 0, start, end)\n}\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0)\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0)\n  }\n\n  const copy = !!dst\n  const off = this._offset(srcStart)\n  const len = srcEnd - srcStart\n  let bytes = len\n  let bufoff = (copy && dstStart) || 0\n  let start = off[1]\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n  }\n\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start) {\n      start = 0\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0) {\n    start += this.length\n  }\n\n  if (end < 0) {\n    end += this.length\n  }\n\n  if (start === end) {\n    return this._new()\n  }\n\n  const startOffset = this._offset(start)\n  const endOffset = this._offset(end)\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] === 0) {\n    buffers.pop()\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1])\n  }\n\n  return this._new(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n\n  return this\n}\n\nBufferList.prototype.duplicate = function duplicate () {\n  const copy = this._new()\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i])\n  }\n\n  return copy\n}\n\nBufferList.prototype.append = function append (buf) {\n  return this._attach(buf, BufferList.prototype._appendBuffer)\n}\n\nBufferList.prototype.prepend = function prepend (buf) {\n  return this._attach(buf, BufferList.prototype._prependBuffer, true)\n}\n\nBufferList.prototype._attach = function _attach (buf, attacher, prepend) {\n  if (buf == null) {\n    return this\n  }\n\n  if (buf.buffer) {\n    // append/prepend a view of the underlying ArrayBuffer\n    attacher.call(this, Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\n  } else if (Array.isArray(buf)) {\n    const [starting, modifier] = prepend ? [buf.length - 1, -1] : [0, 1]\n\n    for (let i = starting; i >= 0 && i < buf.length; i += modifier) {\n      this._attach(buf[i], attacher, prepend)\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    const [starting, modifier] = prepend ? [buf._bufs.length - 1, -1] : [0, 1]\n\n    for (let i = starting; i >= 0 && i < buf._bufs.length; i += modifier) {\n      this._attach(buf._bufs[i], attacher, prepend)\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString()\n    }\n\n    attacher.call(this, Buffer.from(buf))\n  }\n\n  return this\n}\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype._prependBuffer = function prependBuffer (buf) {\n  this._bufs.unshift(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (this._isBufferList(search)) {\n    search = search.slice()\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  const blOffset = this._offset(offset)\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex]\n\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset\n\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\n\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n\n        buffOffset++\n      }\n    }\n\n    buffOffset = 0\n  }\n\n  return -1\n}\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false\n    }\n  }\n  return true\n}\n\n;(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readBigInt64BE: 8,\n    readBigInt64LE: 8,\n    readBigUInt64BE: 8,\n    readBigUInt64LE: 8,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  }\n\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferList || BufferList.isBufferList(b)\n}\n\nBufferList.isBufferList = function isBufferList (b) {\n  return b != null && b[symbol]\n}\n\nmodule.exports = BufferList\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}