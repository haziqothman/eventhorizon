{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { credentialLogger, formatError } from \"../util/logging.js\";\nimport { ChainedTokenCredential } from \"./chainedTokenCredential.js\";\nconst BrowserNotSupportedError = new Error(\"DefaultAzureCredential is not supported in the browser. Use InteractiveBrowserCredential instead.\");\nconst logger = credentialLogger(\"DefaultAzureCredential\");\n/**\n * Provides a default {@link ChainedTokenCredential} configuration for\n * applications that will be deployed to Azure.\n *\n * Only available in Node.js.\n */\nexport class DefaultAzureCredential extends ChainedTokenCredential {\n  /**\n   * Creates an instance of the DefaultAzureCredential class.\n   *\n   * @param options - Options for configuring the client which makes the authentication request.\n   */\n  constructor(_tokenCredentialOptions) {\n    super();\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n  getToken() {\n    logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n}","map":{"version":3,"names":["credentialLogger","formatError","ChainedTokenCredential","BrowserNotSupportedError","Error","logger","DefaultAzureCredential","constructor","_tokenCredentialOptions","info","getToken"],"sources":["/Users/user/workspace/eventhorizon/node_modules/@azure/identity/src/credentials/defaultAzureCredential-browser.mts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { credentialLogger, formatError } from \"../util/logging.js\";\nimport type { AccessToken } from \"@azure/core-auth\";\nimport { ChainedTokenCredential } from \"./chainedTokenCredential.js\";\nimport type { TokenCredentialOptions } from \"../tokenCredentialOptions.js\";\n\nconst BrowserNotSupportedError = new Error(\n  \"DefaultAzureCredential is not supported in the browser. Use InteractiveBrowserCredential instead.\",\n);\nconst logger = credentialLogger(\"DefaultAzureCredential\");\n\n/**\n * Provides a default {@link ChainedTokenCredential} configuration for\n * applications that will be deployed to Azure.\n *\n * Only available in Node.js.\n */\nexport class DefaultAzureCredential extends ChainedTokenCredential {\n  /**\n   * Creates an instance of the DefaultAzureCredential class.\n   *\n   * @param options - Options for configuring the client which makes the authentication request.\n   */\n  constructor(_tokenCredentialOptions?: TokenCredentialOptions) {\n    super();\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n\n  public getToken(): Promise<AccessToken> {\n    logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,oBAAoB;AAElE,SAASC,sBAAsB,QAAQ,6BAA6B;AAGpE,MAAMC,wBAAwB,GAAG,IAAIC,KAAK,CACxC,mGAAmG,CACpG;AACD,MAAMC,MAAM,GAAGL,gBAAgB,CAAC,wBAAwB,CAAC;AAEzD;;;;;;AAMA,OAAM,MAAOM,sBAAuB,SAAQJ,sBAAsB;EAChE;;;;;EAKAK,YAAYC,uBAAgD;IAC1D,KAAK,EAAE;IACPH,MAAM,CAACI,IAAI,CAACR,WAAW,CAAC,EAAE,EAAEE,wBAAwB,CAAC,CAAC;IACtD,MAAMA,wBAAwB;EAChC;EAEOO,QAAQA,CAAA;IACbL,MAAM,CAACK,QAAQ,CAACD,IAAI,CAACR,WAAW,CAAC,EAAE,EAAEE,wBAAwB,CAAC,CAAC;IAC/D,MAAMA,wBAAwB;EAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}